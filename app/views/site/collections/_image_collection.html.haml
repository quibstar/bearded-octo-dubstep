=content_for :custom_js do
  -if collection.settings['filter_by_buttons'] =='1'
    :javascript
      (function ($){

        $("#container-#{collection.id}").imagesLoaded(function() {

        var options = {
          autoResize: true, // This will auto-update the layout when the browser window is resized.
          container: $("#container-#{collection.id}"),
          offset: 2
        };

        var handler = $("#container-#{collection.id} li"),
        filters = $("#filter-container-#{collection.id} li");

        // Call the layout function.
        handler.wookmark(options);
        var onClickFilter = function(event) {
          var item = $(event.currentTarget),
          activeFilters = [];
          item.toggleClass('active');

          // Collect active filter strings
          filters.filter('.active').each(function() {
          activeFilters.push($(this).data('filter'));
        });

        handler.wookmarkInstance.filter(activeFilters, 'or');
        }

        // Capture filter click events.
        filters.click(onClickFilter);

        });
      })(jQuery);


-if collection.settings['tiles'] == '1'
  -gallery_id = "tiles"
  -tiles = 'tiles'
  -thumbnaial_container = ''
-if collection.settings['tiles'] == '0'
  -if  collection.settings['filter_by_buttons'] =='0'
    :javascript 
      jQuery(document).ready(function() {
            jQuery("#gallery-#{collection.id} .nailthumb-container").nailthumb();
        });
  -gallery_id = "gallery-#{collection.id}"
  -tiles = ''
  -thumbnail_container = "nailthumb-container"


-if collection.settings['categories'] == '1' 
  -images = Set.new
  -cats = Array.new
  -collection.categories.each do |col_cat|
    -cats << col_cat.id

  -if collection.settings['filter_by_buttons'] == '1'
    %div{:id => "filter-container-#{collection.id}"}
      %ul#filtersGroup.btn-group
        -Category.where(:id => cats).each do |cat|
          %li{"data-filter" => cat.name, :class => 'btn'}
            =cat.name

  %div{:id => "container-#{collection.id}", :class => "image-gallery"}
    %ul{:id => gallery_id, :class => "thumbnails #{collection.settings['image_size']} #{tiles}"}
      -assets = collection.settings['asset_ids'].split(",").map { |s| s.to_i }

      -Category.where(:id => cats).each do |cat|
        -cat.images.each do |image|
          -images << image

      -images.each do |asset|
        -asset_cats = asset.categories.map {|ac| ac.name }
        %li{:class => "thumbnail #{collection.settings['image_size']}", 'data-filter-class' => asset_cats}
          =link_to(image_tag(asset.image), "#{asset.image}",:class => "fbox-asset #{thumbnail_container}",:rel => "gallery#{collection.id}", :title => "#{asset.caption}")
          %h6
            =asset.title
          -if collection.settings['show_caption'] == '1'
            %small
              =asset.caption


-if collection.settings['categories'] == '0'
  =content_for :custom_js do
    -if collection.settings['tiles'] == '0'
      :javascript 
        jQuery(document).ready(function() {
            jQuery("#gallery-#{collection.id} .nailthumb-container").nailthumb();
          });



  %div{:id => "container-#{collection.id}", :class => "image-gallery"}
    %ul{:id => gallery_id, :class => " thumbnails #{collection.settings['image_size']} #{tiles}"}
      -assets = collection.settings['asset_ids'].split(",").map { |s| s.to_i }
      -assets.each do |image|
        -asset = Image.find_by_id(image)
        -if asset
          -asset_cats = asset.categories.map {|ac| ac.name }
          %li
            =link_to(image_tag(asset.image), "#{asset.image}",:class => "fbox-asset #{thumbnail_container}",:rel => "gallery#{collection.id}", :title => "#{asset.caption}")
            %h6
              =asset.title
            -if collection.settings['show_caption'] == '1'
              %small
                =asset.caption